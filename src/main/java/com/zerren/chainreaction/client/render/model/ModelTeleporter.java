package com.zerren.chainreaction.client.render.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;

/**
 * Created by Zerren on 9/22/2015.
 */
public class ModelTeleporter extends ModelBase {

    ModelRenderer PlateBottom;
    ModelRenderer SupportFL;
    ModelRenderer SupportBL;
    ModelRenderer SupportBR;
    ModelRenderer SupportFR;
    ModelRenderer PlateTop;
    ModelRenderer PowerPlateRear;
    ModelRenderer ArmTL;
    ModelRenderer ArmBL;
    ModelRenderer ArmTR;
    ModelRenderer ArmBR;
    ModelRenderer EmitterTFL;
    ModelRenderer EmitterTBL;
    ModelRenderer EmitterTBR;
    ModelRenderer EmitterTFR;
    ModelRenderer EmitterBBL;
    ModelRenderer EmitterBFL;
    ModelRenderer EmitterBBR;
    ModelRenderer EmitterBFR;
    ModelRenderer PlateSupportTop;
    ModelRenderer PlateSupportBottom;
    ModelRenderer PowerInputBack;
    ModelRenderer PowerInputTop;
    ModelRenderer Arm2TL;
    ModelRenderer Arm2BL;
    ModelRenderer Arm2TR;
    ModelRenderer Arm2BR;
    ModelRenderer WallL;
    ModelRenderer WallR;
    ModelRenderer WallLCorner;
    ModelRenderer WallRCorner;
    ModelRenderer RodBR;
    ModelRenderer RodBL;
    ModelRenderer RodTL;
    ModelRenderer RodTR;
    ModelRenderer CoilTL;
    ModelRenderer CoilBR;
    ModelRenderer CoilTR;
    ModelRenderer CoilBL;

    public ModelTeleporter() {
        textureWidth = 128;
        textureHeight = 128;

        PlateBottom = new ModelRenderer(this, 0, 92);
        PlateBottom.addBox(0F, 0F, 0F, 32, 4, 32);
        PlateBottom.setRotationPoint(-16F, 20F, -16F);
        PlateBottom.setTextureSize(128, 128);
        PlateBottom.mirror = true;
        setRotation(PlateBottom, 0F, 0F, 0F);
        SupportFL = new ModelRenderer(this, 0, 36);
        SupportFL.addBox(0F, 0F, 0F, 4, 40, 4);
        SupportFL.setRotationPoint(-18F, -18F, -10F);
        SupportFL.setTextureSize(128, 128);
        SupportFL.mirror = true;
        setRotation(SupportFL, 0F, 0F, 0F);
        SupportBL = new ModelRenderer(this, 0, 36);
        SupportBL.addBox(0F, 0F, 0F, 4, 40, 4);
        SupportBL.setRotationPoint(-18F, -18F, 6F);
        SupportBL.setTextureSize(128, 128);
        SupportBL.mirror = true;
        setRotation(SupportBL, 0F, 0F, 0F);
        SupportBR = new ModelRenderer(this, 0, 36);
        SupportBR.addBox(0F, 0F, 0F, 4, 40, 4);
        SupportBR.setRotationPoint(14F, -18F, 6F);
        SupportBR.setTextureSize(128, 128);
        SupportBR.mirror = true;
        setRotation(SupportBR, 0F, 0F, 0F);
        SupportFR = new ModelRenderer(this, 0, 36);
        SupportFR.addBox(0F, 0F, 0F, 4, 40, 4);
        SupportFR.setRotationPoint(14F, -18F, -10F);
        SupportFR.setTextureSize(128, 128);
        SupportFR.mirror = true;
        setRotation(SupportFR, 0F, 0F, 0F);
        PlateTop = new ModelRenderer(this, 0, 0);
        PlateTop.addBox(0F, 0F, 0F, 32, 4, 32);
        PlateTop.setRotationPoint(-16F, -20F, -16F);
        PlateTop.setTextureSize(128, 128);
        PlateTop.mirror = true;
        setRotation(PlateTop, 0F, 0F, 0F);
        PowerPlateRear = new ModelRenderer(this, 19, 40);
        PowerPlateRear.addBox(0F, 0F, 0F, 20, 20, 4);
        PowerPlateRear.setRotationPoint(-10F, -8F, 14F);
        PowerPlateRear.setTextureSize(128, 128);
        PowerPlateRear.mirror = true;
        setRotation(PowerPlateRear, 0F, 0F, 0F);
        ArmTL = new ModelRenderer(this, 0, 88);
        ArmTL.addBox(0F, 0F, 0F, 11, 4, 4);
        ArmTL.setRotationPoint(-15F, -6F, 7F);
        ArmTL.setTextureSize(128, 128);
        ArmTL.mirror = true;
        setRotation(ArmTL, 0F, -0.7853982F, 0F);
        ArmBL = new ModelRenderer(this, 0, 88);
        ArmBL.addBox(0F, 0F, 0F, 11, 4, 4);
        ArmBL.setRotationPoint(-15F, 6F, 7F);
        ArmBL.setTextureSize(128, 128);
        ArmBL.mirror = true;
        setRotation(ArmBL, 0F, -0.7853982F, 0F);
        ArmTR = new ModelRenderer(this, 0, 88);
        ArmTR.addBox(0F, 0F, 0F, 11, 4, 4);
        ArmTR.setRotationPoint(7F, -6F, 15F);
        ArmTR.setTextureSize(128, 128);
        ArmTR.mirror = true;
        setRotation(ArmTR, 0F, 0.8028515F, 0F);
        ArmBR = new ModelRenderer(this, 0, 88);
        ArmBR.addBox(0F, 0F, 0F, 11, 4, 4);
        ArmBR.setRotationPoint(7F, 6F, 15F);
        ArmBR.setTextureSize(128, 128);
        ArmBR.mirror = true;
        setRotation(ArmBR, 0F, 0.8028515F, 0F);
        EmitterTFL = new ModelRenderer(this, 0, 0);
        EmitterTFL.addBox(0F, 0F, 0F, 3, 8, 8);
        EmitterTFL.setRotationPoint(-13F, -8F, -12F);
        EmitterTFL.setTextureSize(128, 128);
        EmitterTFL.mirror = true;
        setRotation(EmitterTFL, 0F, -0.296706F, 0F);
        EmitterTBL = new ModelRenderer(this, 0, 0);
        EmitterTBL.addBox(0F, 0F, 0F, 3, 8, 8);
        EmitterTBL.setRotationPoint(-15F, -8F, 4F);
        EmitterTBL.setTextureSize(128, 128);
        EmitterTBL.mirror = true;
        setRotation(EmitterTBL, 0F, 0.5235988F, 0F);
        EmitterTBR = new ModelRenderer(this, 0, 16);
        EmitterTBR.addBox(0F, 0F, 0F, 3, 8, 8);
        EmitterTBR.setRotationPoint(12.5F, -8F, 3F);
        EmitterTBR.setTextureSize(128, 128);
        EmitterTBR.mirror = true;
        setRotation(EmitterTBR, 0F, -0.4886922F, 0F);
        EmitterTFR = new ModelRenderer(this, 0, 16);
        EmitterTFR.addBox(0F, 0F, 0F, 3, 8, 8);
        EmitterTFR.setRotationPoint(10.5F, -8F, -11.5F);
        EmitterTFR.setTextureSize(128, 128);
        EmitterTFR.mirror = true;
        setRotation(EmitterTFR, 0F, 0.2443461F, 0F);
        EmitterBBL = new ModelRenderer(this, 0, 0);
        EmitterBBL.addBox(0F, 0F, 0F, 3, 8, 8);
        EmitterBBL.setRotationPoint(-15F, 4F, 4F);
        EmitterBBL.setTextureSize(128, 128);
        EmitterBBL.mirror = true;
        setRotation(EmitterBBL, 0F, 0.5235988F, 0F);
        EmitterBFL = new ModelRenderer(this, 0, 0);
        EmitterBFL.addBox(0F, 0F, 0F, 3, 8, 8);
        EmitterBFL.setRotationPoint(-13F, 4F, -12F);
        EmitterBFL.setTextureSize(128, 128);
        EmitterBFL.mirror = true;
        setRotation(EmitterBFL, 0F, -0.296706F, 0F);
        EmitterBBR = new ModelRenderer(this, 0, 16);
        EmitterBBR.addBox(0F, 0F, 0F, 3, 8, 8);
        EmitterBBR.setRotationPoint(12.5F, 4F, 3F);
        EmitterBBR.setTextureSize(128, 128);
        EmitterBBR.mirror = true;
        setRotation(EmitterBBR, 0F, -0.4886922F, 0F);
        EmitterBFR = new ModelRenderer(this, 0, 16);
        EmitterBFR.addBox(0F, 0F, 0F, 3, 8, 8);
        EmitterBFR.setRotationPoint(10.5F, 4F, -11.5F);
        EmitterBFR.setTextureSize(128, 128);
        EmitterBFR.mirror = true;
        setRotation(EmitterBFR, 0F, 0.2443461F, 0F);
        PlateSupportTop = new ModelRenderer(this, 19, 66);
        PlateSupportTop.addBox(0F, 0F, 0F, 12, 10, 4);
        PlateSupportTop.setRotationPoint(-6F, -18F, 14F);
        PlateSupportTop.setTextureSize(128, 128);
        PlateSupportTop.mirror = true;
        setRotation(PlateSupportTop, 0F, 0F, 0F);
        PlateSupportBottom = new ModelRenderer(this, 19, 66);
        PlateSupportBottom.addBox(0F, 0F, 0F, 12, 10, 4);
        PlateSupportBottom.setRotationPoint(-6F, 12F, 14F);
        PlateSupportBottom.setTextureSize(128, 128);
        PlateSupportBottom.mirror = true;
        setRotation(PlateSupportBottom, 0F, 0F, 0F);
        PowerInputBack = new ModelRenderer(this, 70, 38);
        PowerInputBack.addBox(0F, 0F, 0F, 16, 16, 12);
        PowerInputBack.setRotationPoint(-8F, -6F, 12F);
        PowerInputBack.setTextureSize(128, 128);
        PowerInputBack.mirror = true;
        setRotation(PowerInputBack, 0F, 0F, 0F);
        PowerInputTop = new ModelRenderer(this, 36, 66);
        PowerInputTop.addBox(0F, 0F, 0F, 16, 10, 16);
        PowerInputTop.setRotationPoint(-8F, -24F, -8F);
        PowerInputTop.setTextureSize(128, 128);
        PowerInputTop.mirror = true;
        setRotation(PowerInputTop, 0F, 0F, 0F);
        Arm2TL = new ModelRenderer(this, 0, 100);
        Arm2TL.addBox(0F, 0F, 0F, 4, 4, 12);
        Arm2TL.setRotationPoint(-17F, -6F, -6F);
        Arm2TL.setTextureSize(128, 128);
        Arm2TL.mirror = true;
        setRotation(Arm2TL, 0F, 0F, 0F);
        Arm2BL = new ModelRenderer(this, 0, 100);
        Arm2BL.addBox(0F, 0F, 0F, 4, 4, 12);
        Arm2BL.setRotationPoint(-17F, 6F, -6F);
        Arm2BL.setTextureSize(128, 128);
        Arm2BL.mirror = true;
        setRotation(Arm2BL, 0F, 0F, 0F);
        Arm2TR = new ModelRenderer(this, 0, 100);
        Arm2TR.addBox(0F, 0F, 0F, 4, 4, 12);
        Arm2TR.setRotationPoint(13F, -6F, -6F);
        Arm2TR.setTextureSize(128, 128);
        Arm2TR.mirror = true;
        setRotation(Arm2TR, 0F, 0F, 0F);
        Arm2BR = new ModelRenderer(this, 0, 100);
        Arm2BR.addBox(0F, 0F, 0F, 4, 4, 12);
        Arm2BR.setRotationPoint(13F, 6F, -6F);
        Arm2BR.setTextureSize(128, 128);
        Arm2BR.mirror = true;
        setRotation(Arm2BR, 0F, 0F, 0F);
        WallL = new ModelRenderer(this, 101, 75);
        WallL.addBox(-15.5F, -16F, -6F, 1, 36, 12);
        WallL.setRotationPoint(0F, 0F, 0F);
        WallL.setTextureSize(128, 128);
        WallL.mirror = true;
        setRotation(WallL, 0F, 0F, 0F);
        WallR = new ModelRenderer(this, 101, 75);
        WallR.addBox(-15.5F, -16F, -6F, 1, 36, 12);
        WallR.setRotationPoint(0F, 0F, 0F);
        WallR.setTextureSize(128, 128);
        WallR.mirror = true;
        setRotation(WallR, 0F, 3.141593F, 0F);
        WallLCorner = new ModelRenderer(this, 101, 75);
        WallLCorner.addBox(-16.5F, -16F, -6F, 1, 36, 12);
        WallLCorner.setRotationPoint(0F, 0F, 0F);
        WallLCorner.setTextureSize(128, 128);
        WallLCorner.mirror = true;
        setRotation(WallLCorner, 0F, 0.9250245F, 0F);
        WallRCorner = new ModelRenderer(this, 101, 75);
        WallRCorner.addBox(-16.5F, -16F, -6F, 1, 36, 12);
        WallRCorner.setRotationPoint(0F, 0F, 0F);
        WallRCorner.setTextureSize(128, 128);
        WallRCorner.mirror = true;
        setRotation(WallRCorner, 0F, 2.234021F, 0F);
        RodBR = new ModelRenderer(this, 97, 13);
        RodBR.addBox(-2F, 9F, -2F, 4, 10, 4);
        RodBR.setRotationPoint(0F, 2F, 21F);
        RodBR.setTextureSize(128, 128);
        RodBR.mirror = true;
        setRotation(RodBR, 0F, 0F, -0.7853982F);
        RodBL = new ModelRenderer(this, 97, 13);
        RodBL.addBox(-2F, 9F, -2F, 4, 10, 4);
        RodBL.setRotationPoint(0F, 2F, 21F);
        RodBL.setTextureSize(128, 128);
        RodBL.mirror = true;
        setRotation(RodBL, 0F, 0F, 0.7853982F);
        RodTL = new ModelRenderer(this, 97, 13);
        RodTL.addBox(-2F, 9F, -2F, 4, 10, 4);
        RodTL.setRotationPoint(0F, 2F, 21F);
        RodTL.setTextureSize(128, 128);
        RodTL.mirror = true;
        setRotation(RodTL, 0F, 0F, 2.356194F);
        RodTR = new ModelRenderer(this, 97, 13);
        RodTR.addBox(-2F, 9F, -2F, 4, 10, 4);
        RodTR.setRotationPoint(0F, 2F, 21F);
        RodTR.setTextureSize(128, 128);
        RodTR.mirror = true;
        setRotation(RodTR, 0F, 0F, -2.356194F);
        CoilTL = new ModelRenderer(this, 98, 0);
        CoilTL.addBox(-3F, 12F, -3F, 6, 6, 6);
        CoilTL.setRotationPoint(0F, 2F, 21F);
        CoilTL.setTextureSize(128, 128);
        CoilTL.mirror = true;
        setRotation(CoilTL, 0F, 0F, 2.356194F);
        CoilBR = new ModelRenderer(this, 98, 0);
        CoilBR.addBox(-3F, 12F, -3F, 6, 6, 6);
        CoilBR.setRotationPoint(0F, 2F, 21F);
        CoilBR.setTextureSize(128, 128);
        CoilBR.mirror = true;
        setRotation(CoilBR, 0F, 0F, -0.7853982F);
        CoilTR = new ModelRenderer(this, 98, 0);
        CoilTR.addBox(-3F, 12F, -3F, 6, 6, 6);
        CoilTR.setRotationPoint(0F, 2F, 21F);
        CoilTR.setTextureSize(128, 128);
        CoilTR.mirror = true;
        setRotation(CoilTR, 0F, 0F, -2.356194F);
        CoilBL = new ModelRenderer(this, 98, 0);
        CoilBL.addBox(-3F, 12F, -3F, 6, 6, 6);
        CoilBL.setRotationPoint(0F, 2F, 21F);
        CoilBL.setTextureSize(128, 128);
        CoilBL.mirror = true;
        setRotation(CoilBL, 0F, 0F, 0.7853982F);
    }

    public void render() {
        float size = 0.0625F;

        PlateBottom.render(size);
        SupportFL.render(size);
        SupportBL.render(size);
        SupportBR.render(size);
        SupportFR.render(size);
        PlateTop.render(size);
        PowerPlateRear.render(size);
        ArmTL.render(size);
        ArmBL.render(size);
        ArmTR.render(size);
        ArmTL.render(size);
        EmitterTFL.render(size);
        EmitterTBL.render(size);
        EmitterTBR.render(size);
        EmitterTFR.render(size);
        EmitterBBL.render(size);
        EmitterBFL.render(size);
        EmitterBBR.render(size);
        EmitterBFR.render(size);
        PlateSupportTop.render(size);
        PlateSupportBottom.render(size);
        PowerInputBack.render(size);
        PowerInputTop.render(size);
        Arm2TL.render(size);
        Arm2BL.render(size);
        Arm2TR.render(size);
        Arm2BR.render(size);
        WallL.render(size);
        WallR.render(size);
        WallLCorner.render(size);
        WallLCorner.render(size);
        RodBR.render(size);
        RodBL.render(size);
        RodTL.render(size);
        RodTR.render(size);
        CoilTL.render(size);
        CoilBR.render(size);
        CoilTR.render(size);
        CoilBL.render(size);
    }

    private void setRotation(ModelRenderer model, float x, float y, float z) {
        model.rotateAngleX = x;
        model.rotateAngleY = y;
        model.rotateAngleZ = z;
    }
}
